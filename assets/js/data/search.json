[
  
  {
    "title": "BASH",
    "url": "/posts/BASH/",
    "categories": "Software, Linux",
    "tags": "",
    "date": "2022-02-03 00:00:00 +0800",
    





    "snippet": "A program is many things. It is a piece of text typed by a programmer, it is the directing force that makes the computer do what it does, it is data in the computer’s memory, yet it controls the actions performed on this same memory. Marijn HaverbekeThe BASH shell provides a machine-user interface for Linux systems.  It is both a program that interprets user input and a programming language with its own command syntax.Open the shell window, or terminal, with  CTL Alt T   and type:$ lshw This compact command returns your machine’s processing and data storage capabilities, specifically its central processing unit’s (CPU) architecture.Perhaps we just want to know our CPU version for gaming considerations.  We will use the super-user sudo command here to invoke full system privileges. $ sudo lshw  | grep CPUThe output to my terminal reads:description: CPUproduct: Intel(R) Core(TM) i5-3320M CPU @ 2.60GHzversion: Intel(R) Core(TM) i5-3320M CPU @ 2.60GHzslot: CPU Socket - U3E1   The exact specifications we required, and just by stacking another command alongside the first, joined by the character, |.  This symbol is more than a mere conjunction, though.  The second command took the output from the first and computed it.We identified to the system what data we wanted to examine, the output from the command lshw, and using grep, searched and returned the exact ‘string’, or configuration of letters we were looking for.  This is an example of a (process) pipeline, and you can get an inkling of the power at your fingertips when you familiarise yourself with shell syntax.We don’t wish to converse with the slightly pedantic machine described in the output of my last command.  We learn the shell’s inelegant syntax, from which we construct commands to feed to the interpreter at the command line interface, to harness our machine’s resources.  Computers extend our human faculties. We benefit from a computer’s meticulous memory, knowledge of its graphical processing capabilities for gaming, the ability to orchestrate processes in repeatable ways, parsing and manipulating data in volumes and at speeds incomprehensible to humans.  This is most effectively done  in Linux systems through shell-scripts.The shell can also interpret commands saved into plain text files called shell-scripts.  Many core system files are, in fact, shell-scripts.  With these we craft more complex commands, defining unique variables and functions, giving us the capability of automation."
  }
  
]

